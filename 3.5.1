import React, { useState } from "react";
import { FiSearch } from "react-icons/fi";
import {
  FaInstagram, FaTwitter, FaFacebook, FaLinkedin, FaGithub,
  FaPinterest, FaSnapchat, FaTwitch, FaYoutube, FaReddit,
  FaDiscord, FaTiktok, FaMedium, FaDribbble, FaSlack,
  FaSteam, FaVimeo, FaWhatsapp, FaWordpress, FaWeebly,
  FaTumblr, FaSkype, FaGoogle, FaStackOverflow, FaAmazon,
  FaApple, FaBehance, FaDeezer, FaFlickr, FaSpotify
} from "react-icons/fa";

const App = () => {
  const [username, setUsername] = useState("");
  const [results, setResults] = useState([]);
  const [loading, setLoading] = useState(false);
  const [darkMode, setDarkMode] = useState(false);

  const allSites = [
    { name: "Instagram", icon: <FaInstagram size={40} /> },
    { name: "Twitter", icon: <FaTwitter size={40} /> },
    { name: "Facebook", icon: <FaFacebook size={40} /> },
    { name: "LinkedIn", icon: <FaLinkedin size={40} /> },
    { name: "GitHub", icon: <FaGithub size={40} /> },
    { name: "Pinterest", icon: <FaPinterest size={40} /> },
    { name: "Snapchat", icon: <FaSnapchat size={40} /> },
    { name: "Twitch", icon: <FaTwitch size={40} /> },
    { name: "YouTube", icon: <FaYoutube size={40} /> },
    { name: "Reddit", icon: <FaReddit size={40} /> },
    { name: "Discord", icon: <FaDiscord size={40} /> },
    { name: "TikTok", icon: <FaTiktok size={40} /> },
    { name: "Medium", icon: <FaMedium size={40} /> },
    { name: "Dribbble", icon: <FaDribbble size={40} /> },
    { name: "Slack", icon: <FaSlack size={40} /> },
    { name: "Steam", icon: <FaSteam size={40} /> },
    { name: "Vimeo", icon: <FaVimeo size={40} /> },
    { name: "WhatsApp", icon: <FaWhatsapp size={40} /> },
    { name: "WordPress", icon: <FaWordpress size={40} /> },
    { name: "Weebly", icon: <FaWeebly size={40} /> },
    { name: "Tumblr", icon: <FaTumblr size={40} /> },
    { name: "Skype", icon: <FaSkype size={40} /> },
    { name: "Gmail", icon: <FaGoogle size={40} /> },
    { name: "Stack Overflow", icon: <FaStackOverflow size={40} /> },
    { name: "Amazon", icon: <FaAmazon size={40} /> },
    { name: "Apple", icon: <FaApple size={40} /> },
    { name: "Behance", icon: <FaBehance size={40} /> },
    { name: "Deezer", icon: <FaDeezer size={40} /> },
    { name: "Flickr", icon: <FaFlickr size={40} /> },
    { name: "Spotify", icon: <FaSpotify size={40} /> },
  ];

  const handleSubmit = (e) => {
    e.preventDefault();
    if (!username) return;

    setLoading(true);
    setTimeout(() => {
      const checked = allSites.map((site) => ({
        ...site,
        available: Math.random() > 0.5,
      }));
      setResults(checked);
      setLoading(false);
    }, 2000);
  };

  const toggleDarkMode = () => setDarkMode(!darkMode);

  const bgClass = darkMode ? "bg-gray-900 text-white" : "bg-white text-black";
  const cardAvailable = darkMode ? "bg-green-800" : "bg-green-100";
  const cardTaken = darkMode ? "bg-red-800" : "bg-red-100";

  const grouped = {
    available: results.filter((r) => r.available),
    taken: results.filter((r) => !r.available),
  };

  return (
    <div className={`min-h-screen ${bgClass} transition duration-300`}>
      {/* Nav */}
      <nav className="w-full flex justify-between items-center p-4 bg-blue-600 text-white fixed top-0 left-0 z-50">
        <div className="text-xl font-bold">Username Checker</div>
        <div className="space-x-4">
          <button onClick={toggleDarkMode} className="bg-blue-800 px-3 py-1 rounded">
            {darkMode ? "‚òÄÔ∏è Light Mode" : "üåô Dark Mode"}
          </button>
        </div>
      </nav>

      {/* Form */}
      <div className="pt-24 max-w-4xl mx-auto px-4">
        <form onSubmit={handleSubmit} className="flex flex-col items-center gap-4">
          <div className="flex w-full justify-center gap-2">
            <input
              type="text"
              className="border p-3 rounded-md w-1/2 text-xl text-black"
              placeholder="Enter username"
              value={username}
              onChange={(e) => setUsername(e.target.value)}
            />
            <button type="submit" className="bg-blue-500 text-white px-4 py-2 rounded-md">
              <FiSearch size={24} />
            </button>
          </div>
        </form>

        {/* Loading Spinner */}
        {loading && (
          <div className="flex justify-center items-center mt-8">
            <div className="animate-spin rounded-full h-16 w-16 border-t-4 border-blue-500 border-solid"></div>
          </div>
        )}

        {/* Grouped Results */}
        {!loading && results.length > 0 && (
          <div className="mt-12 space-y-10">
            {/* Available */}
            <div>
              <h2 className="text-2xl font-bold mb-4 text-green-500">Available</h2>
              <div className="grid grid-cols-2 sm:grid-cols-3 md:grid-cols-4 lg:grid-cols-5 gap-6">
                {grouped.available.map((site, i) => (
                  <div
                    key={i}
                    className={`${cardAvailable} border border-black p-4 rounded-lg shadow-md hover:scale-105 transition-transform text-center flex flex-col items-center`}
                  >
                    <div className="mb-2">{site.icon}</div>
                    <div className="font-semibold">{site.name}</div>
                    <div className="text-sm">Available</div>
                  </div>
                ))}
              </div>
            </div>

            {/* Unavailable */}
            <div>
              <h2 className="text-2xl font-bold mb-4 text-red-500">Taken</h2>
              <div className="grid grid-cols-2 sm:grid-cols-3 md:grid-cols-4 lg:grid-cols-5 gap-6">
                {grouped.taken.map((site, i) => (
                  <div
                    key={i}
                    className={`${cardTaken} border border-black p-4 rounded-lg shadow-md hover:scale-105 transition-transform text-center flex flex-col items-center`}
                  >
                    <div className="mb-2">{site.icon}</div>
                    <div className="font-semibold">{site.name}</div>
                    <div className="text-sm">Taken</div>
                  </div>
                ))}
              </div>
            </div>
          </div>
        )}
      </div>
    </div>
  );
};

export default App;
