import React, { useState } from 'react';
import './App.css';
import { FiSearch } from 'react-icons/fi'; // Using FiSearch icon for the button

function App() {
  const [username, setUsername] = useState('');
  const [availability, setAvailability] = useState(null);
  const [loading, setLoading] = useState(false);

  const handleUsernameChange = (e) => {
    setUsername(e.target.value);
  };

  const handleSearch = () => {
    setLoading(true);
    // Simulate an API call or logic to check username availability
    setTimeout(() => {
      setLoading(false);
      setAvailability([
        { name: 'Facebook', available: Math.random() > 0.5, logo: facebookLogo },
        { name: 'Twitter', available: Math.random() > 0.5, logo: twitterLogo },
        { name: 'Instagram', available: Math.random() > 0.5, logo: instagramLogo },
        { name: 'YouTube', available: Math.random() > 0.5, logo: youtubeLogo },
        { name: 'Snapchat', available: Math.random() > 0.5, logo: snapchatLogo },
        { name: 'TikTok', available: Math.random() > 0.5, logo: tiktokLogo },
      ]);
    }, 2000);
  };

  return (
    <div className="App">
      {/* Username Input Section */}
      <section className="input-section py-10 bg-gray-50">
        <div className="container mx-auto text-center">
          <h1 className="text-4xl font-bold text-gray-800 mb-6">Check Username Availability</h1>
          <div className="flex justify-center items-center space-x-4">
            <input
              type="text"
              className="px-4 py-2 border rounded-md focus:outline-none focus:ring-2 focus:ring-blue-500"
              placeholder="Enter username"
              value={username}
              onChange={handleUsernameChange}
            />
            <button
              className="bg-blue-500 text-white px-6 py-2 rounded-md flex items-center space-x-2 hover:bg-blue-600"
              onClick={handleSearch}
            >
              {loading ? (
                <div className="loader"></div>
              ) : (
                <FiSearch size={20} />
              )}
              <span>Search</span>
            </button>
          </div>
        </div>
      </section>

      {/* Outcome Cards Section */}
      {availability && !loading && (
        <section className="outcome-section py-10 bg-white">
          <div className="container mx-auto">
            <h2 className="text-3xl font-semibold text-gray-800 text-center mb-8">
              Username Availability Results
            </h2>
            <div className="grid grid-cols-1 sm:grid-cols-2 lg:grid-cols-3 gap-6">
              {availability.map((site, index) => (
                <div
                  key={index}
                  className={`border p-6 rounded-lg shadow-lg ${
                    site.available ? 'bg-green-100' : 'bg-red-100'
                  }`}
                >
                  <div className="flex items-center justify-between mb-4">
                    <img
                      src={require(`./logos/${site.logo}`).default} // Dynamically require images
                      alt={site.name}
                      className="w-12 h-12 object-contain"
                    />
                    <span
                      className={`text-sm font-semibold ${
                        site.available ? 'text-green-600' : 'text-red-600'
                      }`}
                    >
                      {site.available ? 'Available' : 'Unavailable'}
                    </span>
                  </div>
                  <h3 className="text-xl font-semibold text-gray-700">{site.name}</h3>
                </div>
              ))}
            </div>
          </div>
        </section>
      )}
    </div>
  );
}

export default App;
