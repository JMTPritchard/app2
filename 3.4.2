import React, { useState } from "react";
import { FiSearch } from 'react-icons/fi';
import {
  FaInstagram, FaTwitter, FaFacebook, FaLinkedin, FaGithub, FaPinterest,
  FaSnapchat, FaTwitch, FaYoutube, FaReddit
} from 'react-icons/fa';

const App = () => {
  const [username, setUsername] = useState("");
  const [available, setAvailable] = useState([]);
  const [loading, setLoading] = useState(false);
  const [darkMode, setDarkMode] = useState(false);

  const handleInputChange = (e) => setUsername(e.target.value);

  const handleSubmit = (e) => {
    e.preventDefault();
    if (!username) return;
    setLoading(true);

    setTimeout(() => {
      const sites = [
        { name: "Instagram", logo: <FaInstagram size={40} /> },
        { name: "Twitter", logo: <FaTwitter size={40} /> },
        { name: "Facebook", logo: <FaFacebook size={40} /> },
        { name: "LinkedIn", logo: <FaLinkedin size={40} /> },
        { name: "GitHub", logo: <FaGithub size={40} /> },
        { name: "Pinterest", logo: <FaPinterest size={40} /> },
        { name: "Snapchat", logo: <FaSnapchat size={40} /> },
        { name: "Twitch", logo: <FaTwitch size={40} /> },
        { name: "YouTube", logo: <FaYoutube size={40} /> },
        { name: "Reddit", logo: <FaReddit size={40} /> }
      ].map(site => ({
        ...site,
        available: Math.random() > 0.5
      }));

      setAvailable(sites);
      setLoading(false);
    }, 1500);
  };

  const availableSites = available.filter(site => site.available);
  const takenSites = available.filter(site => !site.available);

  return (
    <div className={`${darkMode ? 'bg-gray-900 text-white' : 'bg-white text-black'} min-h-screen flex flex-col items-center transition-colors duration-300`}>
      {/* Navbar */}
      <nav className="w-full bg-blue-500 text-white p-4 flex justify-between items-center fixed top-0 left-0 z-50 shadow-lg">
        <div className="text-xl font-bold">Username Checker</div>
        <div className="space-x-4">
          <a href="#home" className="hover:text-gray-200">Home</a>
          <a href="#account" className="hover:text-gray-200">Account</a>
          <a href="#help" className="hover:text-gray-200">Help</a>
          <button
            onClick={() => setDarkMode(!darkMode)}
            className="bg-white text-blue-500 px-2 py-1 rounded shadow hover:bg-gray-100 transition"
          >
            {darkMode ? "Light Mode" : "Dark Mode"}
          </button>
        </div>
      </nav>

      {/* Search */}
      <div className="pt-20 w-full max-w-7xl px-4">
        <form className="flex flex-col items-center mt-8" onSubmit={handleSubmit}>
          <div className="flex items-center space-x-2 mb-6 w-full justify-center">
            <input
              type="text"
              className="border p-2 w-1/2 sm:w-1/3 lg:w-1/4 rounded-md text-xl focus:outline-none focus:ring-2 focus:ring-blue-400"
              placeholder="Enter a username"
              value={username}
              onChange={handleInputChange}
            />
            <button type="submit" className="bg-blue-500 text-white p-2 rounded-md flex items-center hover:bg-blue-600 transition">
              <FiSearch size={24} />
            </button>
          </div>
        </form>

        {loading ? (
          <div className="flex justify-center items-center">
            <div className="animate-spin rounded-full h-16 w-16 border-t-4 border-blue-500 border-solid"></div>
          </div>
        ) : (
          <>
            {available.length > 0 && (
              <>
                <h2 className="text-2xl font-semibold my-4">Available</h2>
                <div className="grid grid-cols-2 sm:grid-cols-3 md:grid-cols-4 lg:grid-cols-5 gap-6">
                  {availableSites.map((site, index) => (
                    <div
                      key={index}
                      className="p-6 rounded-lg border shadow-xl bg-green-100 hover:scale-105 transform transition-all duration-200 flex flex-col items-center text-center"
                      title={`${site.name} is available`}
                    >
                      <div>{site.logo}</div>
                      <h3 className="font-bold mt-2">{site.name}</h3>
                      <p className="text-sm text-green-700">Available</p>
                    </div>
                  ))}
                </div>

                <h2 className="text-2xl font-semibold my-4 mt-10">Taken</h2>
                <div className="grid grid-cols-2 sm:grid-cols-3 md:grid-cols-4 lg:grid-cols-5 gap-6">
                  {takenSites.map((site, index) => (
                    <div
                      key={index}
                      className="p-6 rounded-lg border shadow-xl bg-red-100 hover:scale-105 transform transition-all duration-200 flex flex-col items-center text-center"
                      title={`${site.name} is taken`}
                    >
                      <div>{site.logo}</div>
                      <h3 className="font-bold mt-2">{site.name}</h3>
                      <p className="text-sm text-red-700">Taken</p>
                    </div>
                  ))}
                </div>
              </>
            )}
          </>
        )}
      </div>
    </div>
  );
};

export default App;
